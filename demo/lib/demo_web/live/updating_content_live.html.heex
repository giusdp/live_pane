<div class="mx-auto w-full min-w-0 max-w-3xl pt-8">
  <header class="prose relative mb-4 max-w-3xl border-b border-border pb-8  ">
    <p class="mb-4 text-sm/6 font-medium capitalize text-accent-foreground"></p>

    <h1 class="mb-6 scroll-m-20 text-4xl font-bold tracking-tight">
      Update content contained within a pane
    </h1>

    <p class="mt-2 text-balance text-lg text-muted-foreground">
      An example of how to update the content contained within a pane.
    </p>
  </header>

  <div class="markdown prose relative max-w-3xl pt-4">
    <p class="leading-7 [&amp;:not(:first-child)]:mt-6">
      The <code>pane</code> component has a <code>content</code> slot
      that can be used to update the content contained within a pane.
    </p>

    <p class="mb-10">
      We send an event to the LiveView when the pane is collapsed or expanded with a payload containing
      the id so we can identify which pane was collapsed or expanded. We react to this event by updating the
      button text to the correct action.
    </p>
    <LivePane.group
      id="demo_updating_content"
      class="h-[450px] border-2 border-gray-300 rounded-lg bg-inherit"
      direction="vertical"
    >
      <LivePane.pane
        collapsible={true}
        collapsed_size={5}
        min_size={15}
        starting_size={15}
        group_id="demo_updating_content"
        id="demo_pane_1"
        class="
          w-full bg-gray-100 data-[pane-state=collapsing]:bg-red-200 data-[pane-state=collapsed]:bg-red-200
          data-[pane-state=collapsing]:transition-[flex-grow,background-color] data-[pane-state=collapsing]:duration-1000
          data-[pane-state=collapsing]:ease-linear data-[pane-state=collapsing]:will-change-[flex-grow,background-color]
          data-[pane-state=expanding]:bg-gray-100 data-[pane-state=expanding]:transition-[flex-grow,background-color]
          data-[pane-state=expanding]:duration-1000 data-[pane-state=expanding]:ease-linear
          data-[pane-state=expanding]:will-change-[flex-grow,background-color]
        "
      >
        <div class="flex w-full items-center justify-center rounded-lg p-6">
          <span class="font-semibold">
            Top panel
          </span>
        </div>
      </LivePane.pane>

      <LivePane.resizer
        id="demo_updating_content-resizer"
        group_id="demo_updating_content"
        class="relative flex w-full h-2 items-center justify-center"
      >
        <div class="z-10 h-7 flex items-center w-4 rounded-sm border bg-brand">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="1em"
            height="1em"
            fill="currentColor"
            viewBox="0 0 256 256"
            class="size-4 text-black"
          >
            <rect width="256" height="256" fill="none"></rect>
            <path d="M108,60A16,16,0,1,1,92,44,16,16,0,0,1,108,60Zm56,16a16,16,0,1,0-16-16A16,16,0,0,0,164,76ZM92,112a16,16,0,1,0,16,16A16,16,0,0,0,92,112Zm72,0a16,16,0,1,0,16,16A16,16,0,0,0,164,112ZM92,180a16,16,0,1,0,16,16A16,16,0,0,0,92,180Zm72,0a16,16,0,1,0,16,16A16,16,0,0,0,164,180Z">
            </path>
          </svg>
        </div>
      </LivePane.resizer>
      <LivePane.pane
        starting_size={50}
        group_id="demo_updating_content"
        id="demo_pane_2"
        class="w-full bg-gray-100"
      >
        <div class="overflow-y-auto h-full">
          <div class="flex flex-col gap-2 w-full items-center justify-center rounded-lg p-2">
            <.card
              :for={card <- @cards}
              id={card.id}
              title={card.title}
              content={card.content}
              expanded={MapSet.member?(@expanded_cards, card.id)}
            />
          </div>
        </div>
      </LivePane.pane>
    </LivePane.group>
  </div>
</div>
